<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.redhat.examples</groupId>
        <artifactId>weather-app-cloud-ready-parent</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>weather-app-cloud-ready</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
   <!-- <version.server.bom>7.4.1.GA</version.server.bom>
        <version.microprofile.bom>3.0.0.GA-7.4.1.GA</version.microprofile.bom>
        <bootable.jar.maven.plugin.version>4.1.0.Final-redhat-00001</bootable.jar.maven.plugin.version>
        <version.wildfly.galleon.pack>3.0.0.GA-redhat-00014</version.wildfly.galleon.pack> 
         -->
        <version.wildfly>26.1.1.Final</version.wildfly>
        <version.jboss.bom>26.1.1.Final</version.jboss.bom>
        <version.wildfly.maven.plugin>7.0.2.Final</version.wildfly.maven.plugin> 
        
        <!-- other plugin versions -->
        <version.compiler.plugin>3.8.1</version.compiler.plugin>
        <version.surefire.plugin>2.22.2</version.surefire.plugin>
        <version.failsafe.plugin>2.22.2</version.failsafe.plugin>
		<version.arquillian_jacoco>1.1.0</version.arquillian_jacoco>
        
        <version.arquillian.persistence>1.0.0.Alpha7</version.arquillian.persistence>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-jakartaee8</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency> -->
            <!-- importing the microprofile BOM adds MicroProfile specs
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-xp-microprofile</artifactId>
                <version>${version.microprofile.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency> -->
            
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${version.wildfly}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>  
            
            <!-- importing the microprofile BOM adds MicroProfile specs -->
            <dependency>
			    <groupId>org.wildfly.bom</groupId>
			    <artifactId>wildfly-microprofile</artifactId>
			    <version>${version.wildfly}</version>
			    <scope>import</scope>
			    <type>pom</type>
			</dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Import the Persistence API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Jakarta REST API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Health API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.health</groupId>
            <artifactId>microprofile-health-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Metrics API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenTracing API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenAPI, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.microprofile-ext.openapi-ext</groupId>
            <artifactId>openapi-ui</artifactId>
            <version>1.1.4</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Import the MicroProfile Config API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
        
        
       <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
	<!--	<dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-dbunit</artifactId>
            <version>${version.arquillian.persistence}</version>
            <scope>test</scope>
        </dependency>
		end::d[] -->
		
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>2.4.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.21.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-spi</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-api-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-spi-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.jboss</groupId>
		    <artifactId>jboss-ejb-client</artifactId>
		    <version>4.0.44.Final</version>
		    <scope>test</scope>
		</dependency>
  <!--  <dependency>
           <groupId>org.jboss.arquillian.extension</groupId>
           <artifactId>arquillian-jacoco</artifactId>
           <version>${version.arquillian_jacoco}</version>
           <scope>test</scope>
        </dependency>
    	<dependency>
         <groupId>org.jboss.arquillian.extension</groupId>
         <artifactId>arquillian-jacoco-with-asm</artifactId>
         <version>${version.arquillian_jacoco}</version>
         <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>org.wildfly.arquillian</groupId>
			<artifactId>wildfly-arquillian-container-managed</artifactId>
			<scope>test</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-testsuite-shared</artifactId>
			<version>${version.jboss.bom}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>net.minidev</groupId>
					<artifactId>json-smart</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<scope>test</scope>
		</dependency>
    </dependencies>
    <build>
        <plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<transitive>false</transitive>
					<artifactItems>
						<artifactItem>
							 <groupId>com.ibm.informix</groupId>
						    <artifactId>jdbc</artifactId>
						    <version>4.10.14</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}/</outputDirectory>
							<destFileName>informix-jdbc-4.10.14.jar</destFileName>
						</artifactItem>
					</artifactItems>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>					
				</executions>
			</plugin>
			<plugin>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <version>${version.surefire.plugin}</version>
		        <configuration>
		            <enableAssertions>true</enableAssertions>
		            <!-- System properties to forked surefire JVM which runs clients. -->
		            <failIfNoTests>false</failIfNoTests>
		            <systemPropertyVariables>
		                <jboss.home>${basedir}/target/wildfly-${version.jboss.bom}</jboss.home>
		            </systemPropertyVariables>
		        </configuration>
		        <executions>
		            <!-- Disable default-test execution. -->
		            <execution>
		                <id>default-test</id>
		                <goals>
		                    <goal>test</goal>
		                </goals>
		                <phase>none</phase>
		            </execution>
		            <execution>
		                <id>basic-integration-default-full.surefire</id>
		                <phase>test</phase>
		                <goals>
		                    <goal>test</goal>
		                </goals>
		                <configuration>
		                    <!-- Tests to execute. Overriden in webProfileExclusion.profile . -->
		                    <includes>
		                        <include>com/redhat/example/weather/*TestCase.java</include>
		                    </includes>
		                    <!-- Parameters to test cases. -->
		                    <systemPropertyVariables
												combine.children="append">
		                        <jboss.server.config.file.name>standalone-full.xml</jboss.server.config.file.name>
		                        <jboss.options>-Dee8.preview.mode=true</jboss.options>
		                    </systemPropertyVariables>
		                </configuration>
		            </execution>
		        </executions>
		    </plugin>

		    <!-- Coverage Report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<doclint>none</doclint>
					<charset>UTF-8</charset>
					<show>private</show>
					<nohelp>true</nohelp>
					<excludePackageNames>*.vo</excludePackageNames>
				</configuration>				
			</plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
   <!--         <version>${bootable.jar.maven.plugin.version}</version> -->
               <version>${version.wildfly.maven.plugin}</version>
                <configuration>
                    <feature-packs>
                        <feature-pack>
               <!--        <location>org.jboss.eap:wildfly-galleon-pack:${version.wildfly.galleon.pack}</location>  -->
                           <location>wildfly@maven(org.jboss.universe:community-universe)#${version.wildfly}</location>
                        </feature-pack>
               <!--     <feature-pack>
                            <groupId>com.redhat.examples</groupId>
                            <artifactId>postgresql-layer</artifactId>
                            <version>1.0.0</version>
                        </feature-pack> -->
                        
                        <feature-pack>
                            <groupId>com.redhat.examples</groupId>
                            <artifactId>informix-layer</artifactId>
                            <version>1.0.0</version>
                        </feature-pack>
                    </feature-packs>
                    <cloud />
                    <layers>
                        <layer>jaxrs-server</layer>
                        <layer>microprofile-platform</layer>
                        <layer>informix-driver</layer>
                        <!--  --> 
                         <layer>informix-datasource</layer>
                        <layer>jpa</layer>
                    </layers> 
                    <cloud/>
                    
                    <cli-sessions>
						<cli-session>
							<script-files>							
								<script>deploy-informix-driver.cli</script>
								<!--
								<script>informix-xa-datasource.cli</script>-->
							</script-files>
						</cli-session>
					</cli-sessions>
					
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
	   <profile>
	      <id>basic.integration.tests.profile</id>
	      <activation>
	         <activeByDefault>false</activeByDefault>
	      </activation>
	      <dependencies>
	         <!-- keypoint to Test temp wilfly  -->
	         <dependency>
	            <groupId>org.wildfly.arquillian</groupId>
	            <artifactId>wildfly-arquillian-container-managed</artifactId>
	            <scope>test</scope>
	         </dependency>
	      </dependencies>
	      <!-- Server configuration executions. -->
	      <build>
	         <testResources>
	            <testResource>
	               <directory>src/test/java</directory>
	               <excludes>
	                  <exclude>**/*.java</exclude>
	               </excludes>
	            </testResource>
	         </testResources>
	         <plugins>
	            <plugin>
	               <groupId>org.apache.maven.plugins</groupId>
	               <artifactId>maven-dependency-plugin</artifactId>
	               <executions>
	                  <execution>
	                     <id>unpack</id>
	                     <phase>process-test-classes</phase>
	                     <goals>
	                        <goal>unpack</goal>
	                     </goals>
	                     <configuration>
	                        <artifactItems>
	                           <artifactItem>
	                              <groupId>org.wildfly</groupId>
	                              <artifactId>wildfly-dist</artifactId>
	                              <version>${version.wildfly}</version>
	                              <type>zip</type>
	                              <overWrite>false</overWrite>
	                              <outputDirectory>target</outputDirectory>
	                           </artifactItem>
	                        </artifactItems>
	                     </configuration>
	                  </execution>
	               </executions>
	            </plugin>
	            <!-- Sets general surefire system properties. These can be overridden 
							by inheriting plugin configurations. -->
	            <plugin>
	               <artifactId>maven-surefire-plugin</artifactId>
	               <version>${version.surefire.plugin}</version>
	               <configuration>
	                  <skipTests>${ts.skipTests}</skipTests>
	                  <enableAssertions>true</enableAssertions>
	                  <!-- System properties to forked surefire JVM which runs clients. -->
	                  <failIfNoTests>false</failIfNoTests>
	                  <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
	                  <systemPropertyVariables>
	                     <jboss.home>${basedir}/target/wildfly-${version.wildfly}</jboss.home>
	                  </systemPropertyVariables>
	               </configuration>
	               <executions>
	                  <!-- Disable default-test execution. -->
	                  <execution>
	                     <id>default-test</id>
	                     <goals>
	                        <goal>test</goal>
	                     </goals>
	                     <phase>none</phase>
	                  </execution>
	                  <execution>
	                     <id>basic-integration-default-full.surefire</id>
	                     <phase>test</phase>
	                     <goals>
	                        <goal>test</goal>
	                     </goals>
	                     <configuration>
	                        <!-- Tests to execute. Overriden in webProfileExclusion.profile 
											. -->
	                        <includes>
	                           <include>com/redhat/example/weather/*TestCase.java</include>
	                        </includes>
	                        <!-- Parameters to test cases. -->
	                        <systemPropertyVariables combine.children="append">
	                           <jboss.server.config.file.name>standalone-full.xml</jboss.server.config.file.name>
	                           <jboss.options>-Dee8.preview.mode=true</jboss.options>
	                        </systemPropertyVariables>
	                     </configuration>
	                  </execution>
	               </executions>
	            </plugin>
	         </plugins>
	      </build>
	   </profile>
	   <profile>
	      <!-- An optional Arquillian testing profile that executes tests in your WildFly / JBoss EAP instance.
	                 This profile will start a new WildFly / JBoss EAP instance, and execute the test, shutting it down when done.
	                 Run with: mvn clean verify -Parq-managed -->
	      <id>arq-managed</id>
	      <activation>
	         <activeByDefault>true</activeByDefault>
	      </activation>
	      <dependencies>
	         <dependency>
	            <groupId>org.wildfly.arquillian</groupId>
	            <artifactId>wildfly-arquillian-container-managed</artifactId>
	            <scope>test</scope>
	         </dependency>
	      </dependencies>
	      <build>
	         <plugins>
	            <plugin>
	               <groupId>org.apache.maven.plugins</groupId>
	               <artifactId>maven-failsafe-plugin</artifactId>
	               <version>${version.failsafe.plugin}</version>
	               <executions>
	                  <execution>
	                     <goals>
	                        <goal>integration-test</goal>
	                        <goal>verify</goal>
	                     </goals>
	                  </execution>
	               </executions>
	               <configuration>
	                  <!-- Configuration for Arquillian: -->
	                  <systemPropertyVariables>
	                     <!-- Defines the container qualifier in "arquillian.xml" -->
	                     <arquillian.launch>widlfly-managed</arquillian.launch>
	                  </systemPropertyVariables>
	               </configuration>
	            </plugin>
	         </plugins>
	      </build>
	   </profile>
	   <profile>
	      <!-- An optional Arquillian testing profile that executes tests in a remote JBoss EAP instance.
	                 Run with: mvn clean verify -Parq-remote -->
	      <id>arq-remote</id>
	      <activation>
	         <activeByDefault>false</activeByDefault>
	      </activation>
	      <dependencies>
	         <dependency>
	            <groupId>org.wildfly.arquillian</groupId>
	            <artifactId>wildfly-arquillian-container-remote</artifactId>
	            <scope>test</scope>
	         </dependency>
	      </dependencies>
	      <build>
	         <plugins>
	            <plugin>
	               <groupId>org.apache.maven.plugins</groupId>
	               <artifactId>maven-failsafe-plugin</artifactId>
	               <version>${version.failsafe.plugin}</version>
	               <executions>
	                  <execution>
	                     <goals>
	                        <goal>integration-test</goal>
	                        <goal>verify</goal>
	                     </goals>
	                  </execution>
	               </executions>
	               <configuration>
	                  <!-- Configuration for Arquillian: -->
	                  <systemPropertyVariables>
	                     <!-- Defines the container qualifier in "arquillian.xml" -->
	                     <arquillian.launch>widlfly-remote</arquillian.launch>
	                  </systemPropertyVariables>
	               </configuration>
	            </plugin>
	            <!-- The WildFly plugin deploys your war to a local JBoss AS container -->
				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-jar-maven-plugin</artifactId> 
					<version>${version.wildfly.maven.plugin}</version>
					<configuration>
	             <!--  <hostname>192.168.18.30</hostname> -->
	                    <hostname>localhost</hostname>
	                    <port>9990</port>
	                    <username>admin</username>
	                    <password>123456</password>
	            <!-- <jbossHome>C:/tools/wildfly-8.0.0.Final</jbossHome> -->
					</configuration>				
				</plugin>
	         </plugins>
	      </build>
	   </profile>
	</profiles>
</project>