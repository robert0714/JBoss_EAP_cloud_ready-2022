<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.redhat.examples</groupId>
        <artifactId>weather-app-cloud-ready-parent</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>weather-app-cloud-ready</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
   <!-- <version.server.bom>7.4.1.GA</version.server.bom>
        <version.microprofile.bom>3.0.0.GA-7.4.1.GA</version.microprofile.bom>
        <bootable.jar.maven.plugin.version>4.1.0.Final-redhat-00001</bootable.jar.maven.plugin.version>
        <version.wildfly.galleon.pack>3.0.0.GA-redhat-00014</version.wildfly.galleon.pack> 
         -->
        <version.wildfly>26.1.1.Final</version.wildfly>
        <version.wildfly.maven.plugin>7.0.2.Final</version.wildfly.maven.plugin> 
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-jakartaee8</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency> -->
            <!-- importing the microprofile BOM adds MicroProfile specs
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-xp-microprofile</artifactId>
                <version>${version.microprofile.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency> -->
            
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${version.wildfly}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>  
            
            <!-- importing the microprofile BOM adds MicroProfile specs -->
            <dependency>
			    <groupId>org.wildfly.bom</groupId>
			    <artifactId>wildfly-microprofile</artifactId>
			    <version>${version.wildfly}</version>
			    <scope>import</scope>
			    <type>pom</type>
			</dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Import the Persistence API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Jakarta REST API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Health API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.health</groupId>
            <artifactId>microprofile-health-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Metrics API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenTracing API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenAPI, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.microprofile-ext.openapi-ext</groupId>
            <artifactId>openapi-ui</artifactId>
            <version>1.1.4</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Import the MicroProfile Config API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<transitive>false</transitive>
					<artifactItems>
						<artifactItem>
							 <groupId>com.ibm.informix</groupId>
						    <artifactId>jdbc</artifactId>
						    <version>4.10.14</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}/</outputDirectory>
							<destFileName>informix-jdbc-4.10.14.jar</destFileName>
						</artifactItem>
					</artifactItems>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
   <!--         <version>${bootable.jar.maven.plugin.version}</version> -->
               <version>${version.wildfly.maven.plugin}</version>
                <configuration>
                    <feature-packs>
                        <feature-pack>
               <!--        <location>org.jboss.eap:wildfly-galleon-pack:${version.wildfly.galleon.pack}</location>  -->
                           <location>wildfly@maven(org.jboss.universe:community-universe)#${version.wildfly}</location>
                        </feature-pack>
               <!--     <feature-pack>
                            <groupId>com.redhat.examples</groupId>
                            <artifactId>postgresql-layer</artifactId>
                            <version>1.0.0</version>
                        </feature-pack> -->
                        
                        <feature-pack>
                            <groupId>com.redhat.examples</groupId>
                            <artifactId>informix-layer</artifactId>
                            <version>1.0.0</version>
                        </feature-pack>
                    </feature-packs>
                    <cloud />
                    <layers>
                        <layer>jaxrs-server</layer>
                        <layer>microprofile-platform</layer>
                        <layer>informix-driver</layer>
                        <layer>informix-datasource</layer> 
                        <layer>jpa</layer>
                    </layers>
                    <cloud/>
                    
                    <cli-sessions>
						<cli-session>
							<script-files>
							<!--	<script>informix-datasource.cli</script>-->
								<script>informix-driver.cli</script>
							</script-files>
						</cli-session>
					</cli-sessions>
					
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>